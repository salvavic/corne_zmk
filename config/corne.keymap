/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

    behaviors {

        // lh_pht: left_hand_positional_hold_tap {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "LEFT_POSITIONAL_HOLD_TAP";
        //     #binding-cells = <2>;
        //     flavor = "tap-unless-interrupted";
        //     tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
        //     quick-tap-ms = <200>;
        //     bindings = <&kp>, <&kp>;
        //     // hold-trigger-key-positions = <5 6 7 8 9 10>;    // <---[[right-hand keys]]
        // };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSFT>, <&kp CAPS>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COMMA>, <&kp LS(COMMA)>;
        };

        td2: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_2";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp DOT>, <&kp LS(DOT)>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

     };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q      &kp W      &kp E      &kp R      &kp T   &kp Y &kp U       &kp I      &kp O       &kp P         &kp BSPC
   &kp TAB   &hm LGUI A &hm LALT S &hm LCTL D &hm LSFT F &kp G   &kp H &hm LSFT J  &hm LCTL K &hm LALT L  &hm LGUI SEMI &kp SQT
   &td0      &kp Z      &kp X      &kp C      &kp V      &kp B   &kp N &kp M       &td1       &td2        &kp FSLH      &kp RET
                  &lt 3 RET &lt 1 DEL &lt 2 SPACE        &lt 2 SPACE &lt 1 DEL &lt 3 RET
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |€¡¿
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans     &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8   &kp F9    &kp F10 &kp F11
   &kp K_CMENU  &trans       &trans       &trans       &kp trans    &kp LC(F4)     &trans   &kp DOWN &kp UP   &trans    &trans  &kp F12
   &kp LSHFT  &trans       &kp LC(X)    &kp LC(V)    &kp LC(C)    &trans         &kp HOME &kp LEFT &kp DOWN &kp RIGHT &kp END &kp PSCRN
                          	        &kp BSPC     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  =  |  *  |  +  |  @  |  \  |   |  €  |  $  |  [  |  ]  |  º  | DEL  |
// | CTRL |  "  |  '  |  /  |  &  |  |  |   |  ¡  |  !  |  (  |  )  |  '  |  ^   |
// | SHFT |  <  |  >  |  %  |  -  |  #  |   |  ¿  |  ?  |  {  |  }  |  `  |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp LS(N0) &kp LS(RBKT)  &kp RBKT     &kp RA(N2)   &kp RA(GRAVE)       &kp RA(N5)       &kp LS(N4)        &kp RA(LBKT) &kp RA(RBKT)   &kp GRAVE    &kp DEL
   &trans  &kp LS(N2) &kp KP_MINUS  &kp LS(N7)   &kp LS(N6)   &kp RA(N1)          &kp EQUAL        &kp RS(N1)        &kp LS(N8)   &kp LS(N9)     &kp KP_MINUS &kp LS(LBKT)
   &trans  &kp NUBS   &kp LS(NUBS)  &kp LS(N5)   &kp FSLH     &kp RA(N3)          &kp LS(EQUAL)    &kp RS(MINUS)     &kp RA(APOS) &kp RA(NUHS)   &kp RA(LBKT)     &trans
                    	            &trans       &trans       &trans              &trans           &trans            &trans
                        >;
                };

                numeric_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans     &trans     &trans         &trans       &trans       &trans       &trans   &kp N7   &kp N8 &kp N9    &trans &kp DEL
   &kp CAPS   &trans     &kp PG_UP      &kp UP       &kp PG_DN    &trans       &trans   &kp N4   &kp N5 &kp N6    &trans &trans
   &trans     &kp HOME   &kp LEFT       &kp DOWN     &kp RIGHT    &kp END      &trans   &kp N1   &kp N2 &kp N3    &trans &trans
                          	            &trans       &kp BSPC     &trans       &trans   &trans   &kp KP_N0
                        >;
                };

                 adjust_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &bootloader &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &bootloader
   &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &trans   &trans &trans    &trans &trans
   &trans      &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	             &trans       &trans       &trans         &trans   &trans   &trans
                        >;
                };

        };
};
