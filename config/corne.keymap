/*
 *
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT   0
#define FN        1
#define SY        2
#define NU        3
#define AD        4


/ {
    behaviors {
        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = <5 6 7 8 9 10>;    // <---[[right-hand keys]]
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSFT>, <&kp CAPS>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp COMMA>, <&kp LS(COMMA)>;
        };

    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <FN SY>;
            then-layer = <AD>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------------------------
// | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ã±  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q           &kp W           &kp E              &kp R              &kp T              &kp Y            &kp U           &kp I            &kp O            &kp P             &kp BSPC
   &kp TAB   &lh_pht LGUI A  &lh_pht LALT S  &lh_pht LCTL D     &lh_pht LSFT F     &kp G              &kp H            &lh_pht RSFT J  &lh_pht RCTL K   &lh_pht RALT L   &lh_pht RGUI SEMI &kp SQT
   &td0      &kp Z           &kp X           &kp C              &kp V              &kp Ba              &kp N            &kp M           &td1             &kp DOT          &kp FSLH          &kp ENT
                  &lt NU ENT   &lt FN DEL    &lt SY SPACE             &lt SY SPACE  &lt FN DEL   &lt NU ENT
                        >;
                };

                function_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  11  |
// |      | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |  12  |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans    &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8   &kp F9    &kp F10 &kp F11
   &bt K_APP &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp INS  &trans   &kp UP   &kp RIGHT &trans  &kp F12
   &trans    &kp LC(Y)    &kp LC(N2)   &kp LC(X)    &kp LC(Y)    &kp LC(C)      &kp HOME &kp LEFT &kp DOWN &kp RIGHT &kp END &kp PSCRN
                          	       &kp DEL      &trans       &trans         &kp RET  &trans   &kp LS(S)
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans  &kp LS(N0) &kp LS(RBKT)  &kp RBKT     &kp LA(N2)   &kp RA(GRAVE)       &kp RA(N5)       &kp LS(N4)        &kp RA(LBKT) &kp RA(RBKT)   &kp GRAVE    &kp DEL
   &trans  &kp LS(N2) &kp KP_MINUS  &kp LS(N7)   &kp LS(N6)   &kp RA(N1)          &kp KP_EQUAL     &kp LS(N1)        &kp LS(N8)   &kp LS(N9)     &kp KP_MINUS &kp LS(LBKT)
   &trans  &kp NUBS   &kp LS(NUBS)  &kp LS(N5)   &kp FSLH     &kp RA(N3)          &kp LS(KP_EQUAL) &kp LS(KP_MINUS)  &kp RA(APOS) &kp RA(NUHS)   &kp RA(LBKT)     &trans
                    	            &trans       &trans       &trans              &trans           &trans            &trans
                        >;
                };

                 numeric_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans     &trans     &trans         &trans       &trans       &trans       &trans   &kp KP_N7   &kp KP_N8 &kp KP_N9    &trans &kp DEL
   &kp CAPS   &trans     &kp PG_UP      &kp UP       &kp PG_DN    &trans       &trans   &kp KP_N4   &kp KP_N5 &kp KP_N6    &trans &trans
   &trans     &kp HOME   &kp LEFT       &kp DOWN     &kp RIGHT    &kp END      &trans   &kp KP_N1   &kp KP_N2 &kp KP_N3    &trans &trans
                          	        &trans       &kp BSPC     &trans       &trans   &trans      &kp KP_N0
                        >;
                };

                 adjust_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    |     |     |     |   |     |     |     |
                        bindings = <
   &trans     &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans   &trans   &trans &trans    &trans &trans
   &kp trans  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &trans       &trans       &trans         &trans   &trans   &trans
                        >;
                };

        };
};
